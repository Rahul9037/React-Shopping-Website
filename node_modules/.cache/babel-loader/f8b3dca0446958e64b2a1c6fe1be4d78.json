{"ast":null,"code":"import { takeLatest, all, call, put } from 'redux-saga/effects';\nimport { googleSigninSuccess, googleSigninFailed, emailSigninSuccess, emailSigninFailed } from './user.action';\nimport { GOOGLE_SIGNIN_START, EMAIL_SIGNIN_START } from '../../types/types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(googleSigninSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(googleSigninFailed(error.Message));\n  }\n}\nexport function* signInWithEmail({\n  data: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(emailSigninSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(emailSigninFailed(error.Message));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGNIN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGNIN_START, signInWithEmail);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/rahulsmac/Documents/reactapp/ReactShoppingWebsite/React-Shopping-Website/src/redux/user/user.saga.js"],"names":["takeLatest","all","call","put","googleSigninSuccess","googleSigninFailed","emailSigninSuccess","emailSigninFailed","GOOGLE_SIGNIN_START","EMAIL_SIGNIN_START","auth","googleProvider","createUserProfileDocument","signInWithGoogle","user","signInWithPopup","userRef","userSnapShot","get","id","data","error","Message","signInWithEmail","email","password","signInWithEmailAndPassword","onGoogleSignInStart","onEmailSignInStart","userSaga"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SAASC,mBAAT,EAA8BC,kBAA9B,EAAkDC,kBAAlD,EAAsEC,iBAAtE,QAA+F,eAA/F;AAEA,SAASC,mBAAT,EAA8BC,kBAA9B,QAAwD,mBAAxD;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CAAvB;AACA,UAAMK,OAAO,GAAG,MAAMd,IAAI,CAACU,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMf,GAAG,CAACC,mBAAmB,CAAC;AAAEe,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAApB,CAAT;AACH,GALD,CAMA,OAAOC,KAAP,EAAc;AACV,UAAMlB,GAAG,CAACE,kBAAkB,CAACgB,KAAK,CAACC,OAAP,CAAnB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,eAAV,CAA0B;AAAEH,EAAAA,IAAI,EAAE;AAAEI,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAR,CAA1B,EAAyD;AAC5D,MAAI;AACA,UAAM;AAAEX,MAAAA;AAAF,QAAWJ,IAAI,CAACgB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAjB;AACA,UAAMT,OAAO,GAAG,MAAMd,IAAI,CAACU,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMf,GAAG,CAACG,kBAAkB,CAAC;AAAEa,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAnB,CAAT;AACH,GALD,CAMA,OAAOC,KAAP,EAAc;AACV,UAAMlB,GAAG,CAACI,iBAAiB,CAACc,KAAK,CAACC,OAAP,CAAlB,CAAT;AACH;AAEJ;AAED,OAAO,UAAUK,mBAAV,GAAgC;AACnC,QAAM3B,UAAU,CAACQ,mBAAD,EAAsBK,gBAAtB,CAAhB;AACH;AAED,OAAO,UAAUe,kBAAV,GAA+B;AAClC,QAAM5B,UAAU,CAACS,kBAAD,EAAqBc,eAArB,CAAhB;AACH;AAED,OAAO,UAAUM,QAAV,GAAqB;AACxB,QAAM5B,GAAG,CAAC,CACNC,IAAI,CAACyB,mBAAD,CADE,EAENzB,IAAI,CAAC0B,kBAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { takeLatest, all, call, put } from 'redux-saga/effects';\n\nimport { googleSigninSuccess, googleSigninFailed, emailSigninSuccess, emailSigninFailed } from './user.action';\n\nimport { GOOGLE_SIGNIN_START, EMAIL_SIGNIN_START } from '../../types/types';\n\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\n\nexport function* signInWithGoogle() {\n    try {\n        const { user } = yield auth.signInWithPopup(googleProvider);\n        const userRef = yield call(createUserProfileDocument, user)\n        const userSnapShot = yield userRef.get()\n        yield put(googleSigninSuccess({ id: userSnapShot.id, ...userSnapShot.data() }))\n    }\n    catch (error) {\n        yield put(googleSigninFailed(error.Message))\n    }\n}\n\nexport function* signInWithEmail({ data: { email, password } }) {\n    try {\n        const { user } = auth.signInWithEmailAndPassword(email, password)\n        const userRef = yield call(createUserProfileDocument, user)\n        const userSnapShot = yield userRef.get()\n        yield put(emailSigninSuccess({ id: userSnapShot.id, ...userSnapShot.data() }))\n    }\n    catch (error) {\n        yield put(emailSigninFailed(error.Message))\n    }\n\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(GOOGLE_SIGNIN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(EMAIL_SIGNIN_START, signInWithEmail)\n}\n\nexport function* userSaga() {\n    yield all([\n        call(onGoogleSignInStart),\n        call(onEmailSignInStart)\n    ])\n}"]},"metadata":{},"sourceType":"module"}
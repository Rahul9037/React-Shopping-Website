{"ast":null,"code":"var _jsxFileName = \"/Users/rahulsmac/Documents/reactapp/ReactShoppingWebsite/React-Shopping-Website/src/components/SignIn/SignIn.component.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; //import './SignIn.styles.css';\n\nimport CustomButton from '../custom-button/custom-button.component';\nimport FormInput from '../form-input/form-input.component';\nimport { auth } from '../../firebase/firebase.utils';\nimport { SignInButtonContainer, SignInContainer, TitleContainer } from './SignIn.styles';\nimport { googleSigninStart, emailSigninStart } from '../../redux/user/user.action';\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n      const {\n        emailSigninStart\n      } = this.props;\n\n      if (!email || !password) {\n        alert(\"Email or Password missing\");\n        return;\n      }\n\n      try {\n        emailSigninStart(email, password);\n      } catch (err) {\n        console.error(\"error---\", err.message);\n      }\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      email,\n      password\n    } = this.state;\n    const {\n      signInWithGoogle\n    } = this.props;\n    return /*#__PURE__*/React.createElement(SignInContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TitleContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, \"Login with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      handleChange: this.handleChange,\n      label: \"Email\",\n      value: email,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      handleChange: this.handleChange,\n      label: \"Password\",\n      value: password,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(SignInButtonContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: signInWithGoogle,\n      isGoogleButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, ' ', \"Sign In With Google\", ' '))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signInWithGoogle: () => dispatch(googleSigninStart()),\n  emailSigninStart: (email, password) => dispatch(emailSigninStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/rahulsmac/Documents/reactapp/ReactShoppingWebsite/React-Shopping-Website/src/components/SignIn/SignIn.component.js"],"names":["React","Component","connect","CustomButton","FormInput","auth","SignInButtonContainer","SignInContainer","TitleContainer","googleSigninStart","emailSigninStart","SignIn","constructor","props","handleSubmit","e","preventDefault","email","password","state","alert","err","console","error","message","handleChange","name","value","target","setState","render","signInWithGoogle","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n//import './SignIn.styles.css';\nimport CustomButton from '../custom-button/custom-button.component';\nimport FormInput from '../form-input/form-input.component';\nimport {  auth  } from '../../firebase/firebase.utils';\nimport { SignInButtonContainer,SignInContainer,TitleContainer } from './SignIn.styles';\nimport { googleSigninStart,emailSigninStart } from '../../redux/user/user.action';\n\n\nclass SignIn extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            email: '',\n            password: ''\n        }\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        const { email , password} = this.state\n        const { emailSigninStart } = this.props\n        if(!email || ! password)\n        {\n            alert(\"Email or Password missing\")\n            return\n        }\n        try\n        {\n            emailSigninStart(email , password)\n        }\n        catch(err)\n        {\n            console.error(\"error---\",err.message)\n        }\n        \n\n    }\n\n\n    handleChange = (e) => {\n        const { name, value } = e.target;\n        this.setState({ [name]: value })\n    }\n\n    render() {\n        const { email ,password} = this.state;\n        const { signInWithGoogle } = this.props;\n        return (\n            <SignInContainer>\n                <TitleContainer>I already have an account</TitleContainer>\n                <span>Login with your email and password</span>\n                <form onSubmit={this.handleSubmit}>\n                    <FormInput\n                        type=\"email\"\n                        name=\"email\"\n                        handleChange={this.handleChange}\n                        label=\"Email\"\n                        value={email}\n                        required\n                    />\n                    <FormInput\n                        type=\"password\"\n                        name=\"password\"\n                        handleChange={this.handleChange}\n                        label=\"Password\"\n                        value={password}\n                        required\n                    />\n                    <SignInButtonContainer>\n                    <CustomButton type=\"submit\">Sign In</CustomButton>\n                    <CustomButton type=\"button\" onClick={signInWithGoogle} isGoogleButton>{' '}Sign In With Google{' '}</CustomButton>\n                    </SignInButtonContainer>\n                    \n                </form>\n            </SignInContainer>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    signInWithGoogle : () => dispatch(googleSigninStart()),\n    emailSigninStart : ( email , password) => dispatch(emailSigninStart({email,password}))\n})\n\nexport default connect(null,mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}
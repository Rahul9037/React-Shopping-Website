{"ast":null,"code":"import { takeLatest, all, call, put } from 'redux-saga/effects';\nimport { signinSuccess, signinFailed, signOutSuccess, signOutFailed, signUpSuccess, signUpFailed } from './user.action';\nimport { GOOGLE_SIGNIN_START, EMAIL_SIGNIN_START, CHECK_USER_SESSION, SIGNOUT_START, SIGNUP_START, SIGNUP_SUCCESS } from '../../types/types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth, additionalDetails) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalDetails);\n    const userSnapShot = yield userRef.get();\n    yield put(signinSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(signinFailed(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signinFailed(error));\n  }\n}\nexport function* signInWithEmail({\n  data: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signinFailed(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n\n    if (!userAuth) {\n      return;\n    }\n\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signinFailed(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailed(error));\n  }\n}\nexport function* signUp({\n  data: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailed(error));\n  }\n}\nexport function* signInOnSignUp({\n  data: {\n    user,\n    additionalData\n  }\n}) {\n  try {\n    yield getSnapshotFromUserAuth(user, additionalData);\n  } catch (error) {\n    yield put(signUpFailed(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGNIN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGNIN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(SIGNOUT_START, signOut);\n}\nexport function* onSignUp() {\n  yield takeLatest(SIGNUP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(SIGNUP_SUCCESS, signInOnSignUp);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUp), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/Users/rahulsmac/Documents/reactapp/ReactShoppingWebsite/React-Shopping-Website/src/redux/user/user.saga.js"],"names":["takeLatest","all","call","put","signinSuccess","signinFailed","signOutSuccess","signOutFailed","signUpSuccess","signUpFailed","GOOGLE_SIGNIN_START","EMAIL_SIGNIN_START","CHECK_USER_SESSION","SIGNOUT_START","SIGNUP_START","SIGNUP_SUCCESS","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","additionalDetails","userRef","userSnapShot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","displayName","createUserWithEmailAndPassword","additionalData","signInOnSignUp","onGoogleSignInStart","onEmailSignInStart","onCheckUserSession","onSignOutStart","onSignUp","onSignUpSuccess","userSaga"],"mappings":"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","sourcesContent":["import { takeLatest, all, call, put } from 'redux-saga/effects';\n\nimport { signinSuccess, signinFailed , signOutSuccess ,signOutFailed , signUpSuccess,signUpFailed } from './user.action';\n\nimport { GOOGLE_SIGNIN_START, EMAIL_SIGNIN_START, CHECK_USER_SESSION, SIGNOUT_START , SIGNUP_START, SIGNUP_SUCCESS } from '../../types/types';\n\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\n\n\nexport function* getSnapshotFromUserAuth(userAuth , additionalDetails) {\n    try {\n        const userRef = yield call(createUserProfileDocument, userAuth , additionalDetails)\n        const userSnapShot = yield userRef.get()\n        yield put(signinSuccess({ id: userSnapShot.id, ...userSnapShot.data() }))\n    }\n    catch (error) {\n        yield put(signinFailed(error))\n    }\n}\n\nexport function* signInWithGoogle() {\n    try {\n        const { user } = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user)\n    }\n    catch (error) {\n        yield put(signinFailed(error))\n    }\n}\n\nexport function* signInWithEmail({ data: { email, password } }) {\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password)\n        yield getSnapshotFromUserAuth(user)\n    }\n    catch (error) {\n        yield put(signinFailed(error))\n    }\n\n}\n\nexport function* isUserAuthenticated() {\n    try {\n        const userAuth = yield getCurrentUser();\n        if (!userAuth) { return; }\n        yield getSnapshotFromUserAuth(userAuth)\n    }\n    catch (error) {\n        yield put(signinFailed(error))\n    }\n}\n\nexport function* signOut() {\n\n    try {\n        yield auth.signOut();\n        yield put(signOutSuccess())\n    }\n    catch(error)\n    {\n        yield put(signOutFailed(error))\n    }\n    \n}\n\nexport function* signUp( { data : { email , password , displayName}}){\n   \n    try{\n        const { user } = yield auth.createUserWithEmailAndPassword(email, password)\n        yield put(signUpSuccess( { user , additionalData : { displayName}}))\n    }\n    catch(error)\n    {\n        yield put(signUpFailed(error))\n    }\n}\n\nexport function* signInOnSignUp( { data : { user , additionalData}}){\n    try{\n        yield getSnapshotFromUserAuth( user , additionalData)\n    }\n    catch(error)\n    { \n        yield put(signUpFailed(error))\n\n    }\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(GOOGLE_SIGNIN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(EMAIL_SIGNIN_START, signInWithEmail)\n}\n\nexport function* onCheckUserSession() {\n    yield takeLatest(CHECK_USER_SESSION, isUserAuthenticated)\n}\n\nexport function* onSignOutStart() {\n    yield takeLatest(SIGNOUT_START, signOut)\n}\n\nexport function* onSignUp(){\n    yield takeLatest(SIGNUP_START , signUp)\n}\n\nexport function* onSignUpSuccess(){\n    yield takeLatest(SIGNUP_SUCCESS , signInOnSignUp)\n}\n\n\nexport function* userSaga() {\n    yield all([\n        call(onGoogleSignInStart),\n        call(onEmailSignInStart),\n        call(onCheckUserSession),\n        call(onSignOutStart),\n        call(onSignUp),\n        call(onSignUpSuccess)\n    ])\n}"]},"metadata":{},"sourceType":"module"}
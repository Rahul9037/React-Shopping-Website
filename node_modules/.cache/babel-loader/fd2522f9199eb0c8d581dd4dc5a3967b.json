{"ast":null,"code":"var _jsxFileName = \"/Users/rahulsmac/Documents/reactapp/ReactShoppingWebsite/React-Shopping-Website/src/pages/Shop/Shop.component.js\";\nimport React, { Component } from 'react';\nimport './Shop.styles.css';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport CollectionOverView from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { FetchCollectionsStartAsync } from '../../redux/shop/shop.action';\nimport { selectIsFetching } from '../../redux/shop/shop.selector';\nimport { createStructuredSelector } from 'reselect';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionOverViewWithSpinner = WithSpinner(CollectionOverView);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage); // const ShopPage = ({ match }) => {\n//     return (\n//         <div className='shop-page'>\n//         <Route exact path={`${match.path}`} component={CollectionOverView} />\n//         <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n//       </div>\n//     )\n// }\n\nclass ShopPage extends Component {\n  componentDidMount() {\n    const {\n      FetchCollections\n    } = this.props;\n    FetchCollections();\n  }\n\n  render() {\n    const {\n      match,\n      isFetching\n    } = this.props;\n    console.log(\"f3tch:\", isFetching);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverViewWithSpinner, Object.assign({\n        isLoading: isFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 63\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 73\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isFetching: selectIsFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  FetchCollections: () => dispatch(FetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/rahulsmac/Documents/reactapp/ReactShoppingWebsite/React-Shopping-Website/src/pages/Shop/Shop.component.js"],"names":["React","Component","connect","Route","CollectionOverView","CollectionPage","FetchCollectionsStartAsync","selectIsFetching","createStructuredSelector","WithSpinner","CollectionOverViewWithSpinner","CollectionPageWithSpinner","ShopPage","componentDidMount","FetchCollections","props","render","match","isFetching","console","log","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAO,mBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,0BAAT,QAA2C,8BAA3C;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACL,kBAAD,CAAjD;AACA,MAAMO,yBAAyB,GAAGF,WAAW,CAACJ,cAAD,CAA7C,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMO,QAAN,SAAuBX,SAAvB,CAAgC;AAE9BY,EAAAA,iBAAiB,GAAE;AACjB,UAAM;AAAEC,MAAAA;AAAF,QAAuB,KAAKC,KAAlC;AACAD,IAAAA,gBAAgB;AACjB;;AAEDE,EAAAA,MAAM,GAAE;AACL,UAAM;AAAEC,MAAAA,KAAF;AAAUC,MAAAA;AAAV,QAAyB,KAAKH,KAApC;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBF,UAArB;AACD,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACI,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAIN,KAAD,iBAAW,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEG;AAA1C,SAA0DH,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACI,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAMN,KAAD,iBAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEG;AAAtC,SAAsDH,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADF;AAMD;;AAhB6B;;AAmBhC,MAAMO,eAAe,GAAGd,wBAAwB,CAAC;AAC/CU,EAAAA,UAAU,EAAGX;AADkC,CAAD,CAAhD;;AAIA,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCV,EAAAA,gBAAgB,EAAG,MAAMU,QAAQ,CAAClB,0BAA0B,EAA3B;AADK,CAAL,CAAnC;;AAIA,eAAeJ,OAAO,CAACoB,eAAD,EAAmBC,kBAAnB,CAAP,CAA8CX,QAA9C,CAAf","sourcesContent":["import React, { Component} from 'react';\nimport './Shop.styles.css';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport CollectionOverView from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\n\nimport { FetchCollectionsStartAsync } from '../../redux/shop/shop.action';\nimport { selectIsFetching } from '../../redux/shop/shop.selector';\nimport { createStructuredSelector } from 'reselect';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nconst CollectionOverViewWithSpinner = WithSpinner(CollectionOverView);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\n// const ShopPage = ({ match }) => {\n//     return (\n//         <div className='shop-page'>\n//         <Route exact path={`${match.path}`} component={CollectionOverView} />\n//         <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n//       </div>\n//     )\n// }\n\nclass ShopPage extends Component{\n\n  componentDidMount(){\n    const { FetchCollections } = this.props;\n    FetchCollections()\n  }\n\n  render(){\n     const { match , isFetching } = this.props;\n     console.log(\"f3tch:\",isFetching)\n    return (\n      <div className='shop-page'>\n      <Route exact path={`${match.path}`} render={ (props) => <CollectionOverViewWithSpinner isLoading={isFetching} {...props} />  } />\n      <Route path={`${match.path}/:collectionId`} render = { (props) => <CollectionPageWithSpinner isLoading={isFetching} {...props}/>} />\n    </div>\n  )\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isFetching : selectIsFetching\n})\n\nconst mapDispatchToProps = dispatch => ({\n  FetchCollections : () => dispatch(FetchCollectionsStartAsync())\n})\n\nexport default connect(mapStateToProps , mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}
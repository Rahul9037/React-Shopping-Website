{"ast":null,"code":"import { takeLatest, all, call, put } from 'redux-saga/effects';\nimport { signinSuccess, signinFailed, signOutSuccess, signOutFailed } from './user.action';\nimport { GOOGLE_SIGNIN_START, EMAIL_SIGNIN_START, CHECK_USER_SESSION, SIGNOUT_START } from '../../types/types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapShot = yield userRef.get();\n    yield put(signinSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(signinFailed(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signinFailed(error));\n  }\n}\nexport function* signInWithEmail({\n  data: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signinFailed(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n\n    if (!userAuth) {\n      return;\n    }\n\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signinFailed(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailed(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGNIN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGNIN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(SIGNOUT_START, signOut);\n} //export function* onUserSignUp\n\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["/Users/rahulsmac/Documents/reactapp/ReactShoppingWebsite/React-Shopping-Website/src/redux/user/user.saga.js"],"names":["takeLatest","all","call","put","signinSuccess","signinFailed","signOutSuccess","signOutFailed","GOOGLE_SIGNIN_START","EMAIL_SIGNIN_START","CHECK_USER_SESSION","SIGNOUT_START","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","userRef","userSnapShot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","onGoogleSignInStart","onEmailSignInStart","onCheckUserSession","onSignOutStart","userSaga"],"mappings":"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","sourcesContent":["import { takeLatest, all, call, put } from 'redux-saga/effects';\n\nimport { signinSuccess, signinFailed , signOutSuccess ,signOutFailed} from './user.action';\n\nimport { GOOGLE_SIGNIN_START, EMAIL_SIGNIN_START, CHECK_USER_SESSION, SIGNOUT_START } from '../../types/types';\n\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\n\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n    try {\n        const userRef = yield call(createUserProfileDocument, userAuth)\n        const userSnapShot = yield userRef.get()\n        yield put(signinSuccess({ id: userSnapShot.id, ...userSnapShot.data() }))\n    }\n    catch (error) {\n        yield put(signinFailed(error))\n    }\n}\n\nexport function* signInWithGoogle() {\n    try {\n        const { user } = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user)\n    }\n    catch (error) {\n        yield put(signinFailed(error))\n    }\n}\n\nexport function* signInWithEmail({ data: { email, password } }) {\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password)\n        yield getSnapshotFromUserAuth(user)\n    }\n    catch (error) {\n        yield put(signinFailed(error))\n    }\n\n}\n\nexport function* isUserAuthenticated() {\n    try {\n        const userAuth = yield getCurrentUser();\n        if (!userAuth) { return; }\n        yield getSnapshotFromUserAuth(userAuth)\n    }\n    catch (error) {\n        yield put(signinFailed(error))\n    }\n}\n\nexport function* signOut() {\n\n    try {\n        yield auth.signOut();\n        yield put(signOutSuccess())\n    }\n    catch(error)\n    {\n        yield put(signOutFailed(error))\n    }\n    \n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(GOOGLE_SIGNIN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(EMAIL_SIGNIN_START, signInWithEmail)\n}\n\nexport function* onCheckUserSession() {\n    yield takeLatest(CHECK_USER_SESSION, isUserAuthenticated)\n}\n\nexport function* onSignOutStart() {\n    yield takeLatest(SIGNOUT_START, signOut)\n}\n\n//export function* onUserSignUp\n\n\nexport function* userSaga() {\n    yield all([\n        call(onGoogleSignInStart),\n        call(onEmailSignInStart),\n        call(onCheckUserSession),\n        call(onSignOutStart)\n    ])\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nconst congif = {\n  apiKey: \"AIzaSyCoS494Jg7CFCjHcBz514eFwsD8bY-vkho\",\n  authDomain: \"shoppingwebsitereact.firebaseapp.com\",\n  databaseURL: \"https://shoppingwebsitereact.firebaseio.com\",\n  projectId: \"shoppingwebsitereact\",\n  storageBucket: \"shoppingwebsitereact.appspot.com\",\n  messagingSenderId: \"238779094048\",\n  appId: \"1:238779094048:web:992330f6ec44b21ac79845\",\n  measurementId: \"G-RG3KE9W4CJ\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) {\n    return;\n  }\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email,\n      phoneNumber\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        phoneNumber,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const AddCollectionsAndDocuments = (collectionKey, objectsToAdd) => {\n  const collectionRef = firebase.collection(collectionKey);\n  console.log(collectionRef);\n};\nfirebase.initializeApp(congif);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/rahulsmac/Documents/reactapp/ReactShoppingWebsite/React-Shopping-Website/src/firebase/firebase.utils.js"],"names":["firebase","congif","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","phoneNumber","createdAt","Date","set","error","console","log","message","AddCollectionsAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,sCAFD;AAGXC,EAAAA,WAAW,EAAE,6CAHF;AAIXC,EAAAA,SAAS,EAAE,sBAJA;AAKXC,EAAAA,aAAa,EAAE,kCALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAEzE,MAAI,CAACD,QAAL,EACA;AAAC;AACA;;AACD,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AACA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAClB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA,KAAf;AAAsBC,MAAAA;AAAtB,QAAsCX,QAA5C;AACA,UAAMY,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACA,YAAMX,OAAO,CAACY,GAAR,CACF;AACIL,QAAAA,WADJ;AAEIC,QAAAA,KAFJ;AAGIC,QAAAA,WAHJ;AAIIC,QAAAA,SAJJ;AAKI,WAAGX;AALP,OADE,CAAN;AAUH,KAXD,CAYA,OAAMc,KAAN,EACA;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCF,KAAK,CAACG,OAAxC;AACH;AACJ;;AAED,SAAOhB,OAAP;AAEH,CA9BM;AAgCP,OAAO,MAAMiB,0BAA0B,GAAG,CAACC,aAAD,EAAiBC,YAAjB,KAAkC;AAExE,QAAMC,aAAa,GAAGjC,QAAQ,CAACkC,UAAT,CAAoBH,aAApB,CAAtB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYK,aAAZ;AAGF,CANK;AASPjC,QAAQ,CAACmC,aAAT,CAAuBlC,MAAvB;AAEA,OAAO,MAAMmC,IAAI,GAAGpC,QAAQ,CAACoC,IAAT,EAAb;AACP,OAAO,MAAMtB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMuB,QAAQ,GAAG,IAAIrC,QAAQ,CAACoC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAerC,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst congif = {\n    apiKey: \"AIzaSyCoS494Jg7CFCjHcBz514eFwsD8bY-vkho\",\n    authDomain: \"shoppingwebsitereact.firebaseapp.com\",\n    databaseURL: \"https://shoppingwebsitereact.firebaseio.com\",\n    projectId: \"shoppingwebsitereact\",\n    storageBucket: \"shoppingwebsitereact.appspot.com\",\n    messagingSenderId: \"238779094048\",\n    appId: \"1:238779094048:web:992330f6ec44b21ac79845\",\n    measurementId: \"G-RG3KE9W4CJ\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n\n    if (!userAuth) \n    {return;\n    }\n    const userRef = firestore.doc(`users/${userAuth.uid}`)\n    const snapShot = await userRef.get();\n    if (!snapShot.exists) {\n        const { displayName, email, phoneNumber } = userAuth\n        const createdAt = new Date();\n        try {\n            await userRef.set(\n                {\n                    displayName,\n                    email,\n                    phoneNumber,\n                    createdAt,\n                    ...additionalData\n                }\n            )\n\n        }\n        catch(error)\n        {\n            console.log(\"error creating user\",error.message);\n        }\n    }\n\n    return userRef;\n\n}\n\nexport const AddCollectionsAndDocuments = (collectionKey , objectsToAdd) => {\n\n    const collectionRef = firebase.collection(collectionKey);\n    console.log(collectionRef)\n\n\n }\n\n\nfirebase.initializeApp(congif);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}
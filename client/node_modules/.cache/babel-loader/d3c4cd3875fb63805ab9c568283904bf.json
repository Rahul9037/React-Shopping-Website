{"ast":null,"code":"var _jsxFileName = \"/Users/rahulsmac/Documents/reactapp/ReactShoppingWebsite/React-Shopping-Website/src/pages/Shop/Shop.component.js\";\nimport React, { Component } from 'react';\nimport './Shop.styles.css';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport CollectionOverView from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, ConvertCollectionsToMap } from '../../firebase/firebase.utils';\nimport { UpdateCollection } from '../../redux/shop/shop.action';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionOverViewWithSpinner = WithSpinner(CollectionOverView);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage); // const ShopPage = ({ match }) => {\n//     return (\n//         <div className='shop-page'>\n//         <Route exact path={`${match.path}`} component={CollectionOverView} />\n//         <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n//       </div>\n//     )\n// }\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unSubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      UpdateCollection\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapShot => {\n      const collectionMap = ConvertCollectionsToMap(snapShot);\n      UpdateCollection(collectionMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverViewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 63\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 73\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = Dispatch => ({\n  UpdateCollection: collectionMap => Dispatch(UpdateCollection(collectionMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/rahulsmac/Documents/reactapp/ReactShoppingWebsite/React-Shopping-Website/src/pages/Shop/Shop.component.js"],"names":["React","Component","connect","Route","CollectionOverView","CollectionPage","firestore","ConvertCollectionsToMap","UpdateCollection","WithSpinner","CollectionOverViewWithSpinner","CollectionPageWithSpinner","ShopPage","state","loading","unSubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapShot","collectionMap","setState","render","match","path","mapDispatchToProps","Dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAO,mBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,SAAT,EAAmBC,uBAAnB,QAAkD,+BAAlD;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACL,kBAAD,CAAjD;AACA,MAAMO,yBAAyB,GAAGF,WAAW,CAACJ,cAAD,CAA7C,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMO,QAAN,SAAuBX,SAAvB,CAAgC;AAAA;AAAA;AAAA,SAE9BY,KAF8B,GAEtB;AACNC,MAAAA,OAAO,EAAG;AADJ,KAFsB;AAAA,SAM9BC,uBAN8B,GAMJ,IANI;AAAA;;AAQ9BC,EAAAA,iBAAiB,GAAE;AACjB,UAAM;AAAER,MAAAA;AAAF,QAAuB,KAAKS,KAAlC;AACA,UAAMC,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAA0B,MAAMC,QAAN,IAAkB;AAE1C,YAAMC,aAAa,GAAGf,uBAAuB,CAACc,QAAD,CAA7C;AACAb,MAAAA,gBAAgB,CAACc,aAAD,CAAhB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAG;AAAZ,OAAd;AACD,KALD;AAOD;;AAEDU,EAAAA,MAAM,GAAE;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACD,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAIT,KAAD,iBAAW,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEH;AAA1C,SAAuDG,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,eAIA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAMT,KAAD,iBAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,CADF;AAQD;;AAhC6B;;AAmChC,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACtCpB,EAAAA,gBAAgB,EAAGc,aAAa,IAAIM,QAAQ,CAACpB,gBAAgB,CAACc,aAAD,CAAjB;AADN,CAAL,CAAnC;;AAIA,eAAepB,OAAO,CAAC,IAAD,EAAQyB,kBAAR,CAAP,CAAmCf,QAAnC,CAAf","sourcesContent":["import React, { Component} from 'react';\nimport './Shop.styles.css';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport CollectionOverView from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\n\nimport { firestore,ConvertCollectionsToMap } from '../../firebase/firebase.utils';\nimport { UpdateCollection } from '../../redux/shop/shop.action';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nconst CollectionOverViewWithSpinner = WithSpinner(CollectionOverView);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\n// const ShopPage = ({ match }) => {\n//     return (\n//         <div className='shop-page'>\n//         <Route exact path={`${match.path}`} component={CollectionOverView} />\n//         <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n//       </div>\n//     )\n// }\n\nclass ShopPage extends Component{\n\n  state = {\n    loading : true\n  }\n\n  unSubscribeFromSnapshot = null;\n\n  componentDidMount(){\n    const { UpdateCollection } = this.props\n    const collectionRef = firestore.collection('collections')\n    \n    collectionRef.onSnapshot( async snapShot => {\n\n      const collectionMap = ConvertCollectionsToMap(snapShot)\n      UpdateCollection(collectionMap)\n      this.setState({ loading : false})\n    })\n\n  }\n\n  render(){\n     const { match } = this.props;\n     const { loading } = this.state;\n    return (\n      <div className='shop-page'>\n      {/* <Route exact path={`${match.path}`} component={CollectionOverView} />\n      <Route path={`${match.path}/:collectionId`} component={CollectionPage} /> */}\n      <Route exact path={`${match.path}`} render={ (props) => <CollectionOverViewWithSpinner isLoading={loading} {...props} />  } />\n      <Route path={`${match.path}/:collectionId`} render = { (props) => <CollectionPageWithSpinner isLoading={loading} {...props}/>} />\n    </div>\n  )\n  }\n}\n\nconst mapDispatchToProps = Dispatch => ({\n  UpdateCollection : collectionMap => Dispatch(UpdateCollection(collectionMap))\n})\n\nexport default connect(null , mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}
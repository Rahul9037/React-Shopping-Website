{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedItemCount, cartItem) => accumulatedItemCount + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedTotalPrice, cartItem) => accumulatedTotalPrice + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["/Users/rahulsmac/Documents/reactapp/Shopping-Website/react-shopping-website/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumulatedItemCount","cartItem","quantity","selectCartTotal","accumulatedTotalPrice","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CACzC,CAACC,UAAD,CADyC,EAExCE,IAAI,IAAIA,IAAI,CAACE,SAF2B,CAAtC;AAKP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAE1CE,IAAI,IAAIA,IAAI,CAACI,MAF6B,CAAvC;AAKP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CAC9C,CAACI,eAAD,CAD8C,EAE7CC,SAAS,IAAIA,SAAS,CAACI,MAAV,CAAiB,CAACC,oBAAD,EAAuBC,QAAvB,KAAqCD,oBAAoB,GAAGC,QAAQ,CAACC,QAAtF,EAAiG,CAAjG,CAFgC,CAA3C;AAKP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CACzC,CAACI,eAAD,CADyC,EAExCC,SAAS,IAAIA,SAAS,CAACI,MAAV,CAAkB,CAACK,qBAAD,EAAyBH,QAAzB,KAAuCG,qBAAqB,GAAIH,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACI,KAA/G,EAAuH,CAAvH,CAF2B,CAAtC","sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector(\n    [selectCart],\n    (cart => cart.cartItems)\n)\n\nexport const selectCartHidden = createSelector(\n    [selectCart],\n    cart => cart.hidden\n)\n\nexport const selectCartItemsCount = createSelector(\n    [selectCartItems],\n    (cartItems => cartItems.reduce((accumulatedItemCount, cartItem) => (accumulatedItemCount + cartItem.quantity), 0))\n)\n\nexport const selectCartTotal = createSelector(\n    [selectCartItems],\n    (cartItems => cartItems.reduce( (accumulatedTotalPrice , cartItem) => (accumulatedTotalPrice + (cartItem.quantity * cartItem.price)),0))\n)"]},"metadata":{},"sourceType":"module"}
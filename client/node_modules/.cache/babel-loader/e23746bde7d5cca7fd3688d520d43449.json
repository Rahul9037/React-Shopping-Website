{"ast":null,"code":"var _jsxFileName = \"/Users/rahulsmac/Documents/reactapp/ReactShoppingWebsite/React-Shopping-Website/client/src/components/SignIn/SignIn.component.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport CustomButton from '../custom-button/custom-button.component';\nimport FormInput from '../form-input/form-input.component';\nimport { SignInButtonContainer, SignInContainer, TitleContainer } from './SignIn.styles';\nimport { googleSigninStart, emailSigninStart } from '../../redux/user/user.action';\n\nconst SignIn = ({\n  signInWithGoogle,\n  emailSigninStart\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!email || !password) {\n      alert(\"Email or Password missing\");\n      return;\n    }\n\n    try {\n      emailSigninStart(email, password);\n    } catch (err) {\n      console.error(\"error---\", err.message);\n    }\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(SignInContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TitleContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Login with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    handleChange: handleChange,\n    label: \"Email\",\n    value: email,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    handleChange: handleChange,\n    label: \"Password\",\n    value: password,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(SignInButtonContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: signInWithGoogle,\n    isGoogleButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, ' ', \"Sign In With Google\", ' '))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signInWithGoogle: () => dispatch(googleSigninStart()),\n  emailSigninStart: (email, password) => dispatch(emailSigninStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/rahulsmac/Documents/reactapp/ReactShoppingWebsite/React-Shopping-Website/client/src/components/SignIn/SignIn.component.js"],"names":["React","useState","connect","CustomButton","FormInput","SignInButtonContainer","SignInContainer","TitleContainer","googleSigninStart","emailSigninStart","SignIn","signInWithGoogle","userCredentials","setUserCredentials","email","password","handleSubmit","e","preventDefault","alert","err","console","error","message","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,SAASC,qBAAT,EAAgCC,eAAhC,EAAiDC,cAAjD,QAAuE,iBAAvE;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,8BAApD;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,gBAAD;AAAkBF,EAAAA;AAAlB,CAAD,KAAyC;AAEpD,QAAM,CAAEG,eAAF,EAAoBC,kBAApB,IAA2CZ,QAAQ,CAAC;AAAEa,IAAAA,KAAK,EAAG,EAAV;AAAeC,IAAAA,QAAQ,EAAG;AAA1B,GAAD,CAAzD;AAEA,QAAM;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,eAA5B;;AAEA,QAAMI,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,CAACJ,KAAD,IAAU,CAACC,QAAf,EAAyB;AACrBI,MAAAA,KAAK,CAAC,2BAAD,CAAL;AACA;AACH;;AACD,QAAI;AACAV,MAAAA,gBAAgB,CAACK,KAAD,EAAQC,QAAR,CAAhB;AACH,KAFD,CAGA,OAAOK,GAAP,EAAY;AACRC,MAAAA,OAAO,CAACC,KAAR,CAAc,UAAd,EAA0BF,GAAG,CAACG,OAA9B;AACH;AACJ,GAZD;;AAcA,QAAMC,YAAY,GAAIP,CAAD,IAAO;AACxB,UAAM;AAAEQ,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBT,CAAC,CAACU,MAA1B;AACAd,IAAAA,kBAAkB,CAAC,EAAE,GAAGD,eAAL;AAAuB,OAACa,IAAD,GAAQC;AAA/B,KAAD,CAAlB;AACH,GAHD;;AAKA,sBACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAFJ,eAGI;AAAM,IAAA,QAAQ,EAAEV,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,YAAY,EAAEQ,YAHlB;AAII,IAAA,KAAK,EAAC,OAJV;AAKI,IAAA,KAAK,EAAEV,KALX;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,YAAY,EAAEU,YAHlB;AAII,IAAA,KAAK,EAAC,UAJV;AAKI,IAAA,KAAK,EAAET,QALX;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,eAiBI,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,OAAO,EAAEJ,gBAArC;AAAuD,IAAA,cAAc,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuE,GAAvE,yBAA+F,GAA/F,CAFJ,CAjBJ,CAHJ,CADJ;AA6BH,CAtDD;;AAyDA,MAAMiB,kBAAkB,GAAGC,QAAQ,KAAK;AACpClB,EAAAA,gBAAgB,EAAE,MAAMkB,QAAQ,CAACrB,iBAAiB,EAAlB,CADI;AAEpCC,EAAAA,gBAAgB,EAAE,CAACK,KAAD,EAAQC,QAAR,KAAqBc,QAAQ,CAACpB,gBAAgB,CAAC;AAAEK,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,CAAjB;AAFX,CAAL,CAAnC;;AAKA,eAAeb,OAAO,CAAC,IAAD,EAAO0B,kBAAP,CAAP,CAAkClB,MAAlC,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport CustomButton from '../custom-button/custom-button.component';\nimport FormInput from '../form-input/form-input.component';\nimport { SignInButtonContainer, SignInContainer, TitleContainer } from './SignIn.styles';\nimport { googleSigninStart, emailSigninStart } from '../../redux/user/user.action';\n\n\nconst SignIn = ({signInWithGoogle,emailSigninStart}) => {\n    \n    const [ userCredentials , setUserCredentials ] = useState({ email : '' , password : ''})\n\n    const { email, password } = userCredentials;\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!email || !password) {\n            alert(\"Email or Password missing\")\n            return\n        }\n        try {\n            emailSigninStart(email, password)\n        }\n        catch (err) {\n            console.error(\"error---\", err.message)\n        }\n    }\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setUserCredentials({ ...userCredentials , [name]: value })\n    }\n    \n    return (\n        <SignInContainer>\n            <TitleContainer>I already have an account</TitleContainer>\n            <span>Login with your email and password</span>\n            <form onSubmit={handleSubmit}>\n                <FormInput\n                    type=\"email\"\n                    name=\"email\"\n                    handleChange={handleChange}\n                    label=\"Email\"\n                    value={email}\n                    required\n                />\n                <FormInput\n                    type=\"password\"\n                    name=\"password\"\n                    handleChange={handleChange}\n                    label=\"Password\"\n                    value={password}\n                    required\n                />\n                <SignInButtonContainer>\n                    <CustomButton type=\"submit\">Sign In</CustomButton>\n                    <CustomButton type=\"button\" onClick={signInWithGoogle} isGoogleButton>{' '}Sign In With Google{' '}</CustomButton>\n                </SignInButtonContainer>\n\n            </form>\n        </SignInContainer>\n    )\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n    signInWithGoogle: () => dispatch(googleSigninStart()),\n    emailSigninStart: (email, password) => dispatch(emailSigninStart({ email, password }))\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { FETCH_COLLECTIONS_FAILED, FETCH_COLLECTIONS_START, FETCH_COLLECTIONS_SUCCESS } from '../../types/types';\nimport { firestore, ConvertCollectionsToMap } from '../../firebase/firebase.utils';\nexport const FetchCollectionsStart = () => ({\n  type: FETCH_COLLECTIONS_START\n});\nexport const FetchCollectionsSuccess = collectionMap => ({\n  type: FETCH_COLLECTIONS_SUCCESS,\n  data: collectionMap\n});\nexport const FetchCollectionsFailed = errorMessage => ({\n  type: FETCH_COLLECTIONS_FAILED,\n  data: errorMessage\n});\nexport const FetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(FetchCollectionsStart());\n    collectionRef.get().then(snapShot => {\n      const collectionMap = ConvertCollectionsToMap(snapShot);\n      dispatch(FetchCollectionsStart(collectionMap));\n    }).catch(error => dispatch(FetchCollectionsFailed(error.message)));\n  };\n};","map":{"version":3,"sources":["/Users/rahulsmac/Documents/reactapp/ReactShoppingWebsite/React-Shopping-Website/src/redux/shop/shop.action.js"],"names":["FETCH_COLLECTIONS_FAILED","FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","firestore","ConvertCollectionsToMap","FetchCollectionsStart","type","FetchCollectionsSuccess","collectionMap","data","FetchCollectionsFailed","errorMessage","FetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapShot","catch","error","message"],"mappings":"AAAA,SAAUA,wBAAV,EAAoCC,uBAApC,EAA6DC,yBAA7D,QAA8F,mBAA9F;AACA,SAASC,SAAT,EAAoBC,uBAApB,QAAmD,+BAAnD;AAGA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEL;AADkC,CAAP,CAA9B;AAIP,OAAO,MAAMM,uBAAuB,GAAGC,aAAa,KAAK;AACrDF,EAAAA,IAAI,EAAGJ,yBAD8C;AAErDO,EAAAA,IAAI,EAAGD;AAF8C,CAAL,CAA7C;AAKP,OAAO,MAAME,sBAAsB,GAAGC,YAAY,KAAK;AACnDL,EAAAA,IAAI,EAAGN,wBAD4C;AAEnDS,EAAAA,IAAI,EAAGE;AAF4C,CAAL,CAA3C;AAKP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC5C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACR,qBAAqB,EAAtB,CAAR;AACAS,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,YAAMV,aAAa,GAAGJ,uBAAuB,CAACc,QAAD,CAA7C;AACAL,MAAAA,QAAQ,CAACR,qBAAqB,CAACG,aAAD,CAAtB,CAAR;AACH,KAHD,EAICW,KAJD,CAIOC,KAAK,IAAIP,QAAQ,CAACH,sBAAsB,CAACU,KAAK,CAACC,OAAP,CAAvB,CAJxB;AAKH,GARD;AASH,CAVM","sourcesContent":["import {  FETCH_COLLECTIONS_FAILED, FETCH_COLLECTIONS_START, FETCH_COLLECTIONS_SUCCESS } from '../../types/types';\nimport { firestore, ConvertCollectionsToMap } from '../../firebase/firebase.utils';\n\n\nexport const FetchCollectionsStart = () => ({\n    type: FETCH_COLLECTIONS_START\n})\n\nexport const FetchCollectionsSuccess = collectionMap => ({\n    type : FETCH_COLLECTIONS_SUCCESS,\n    data : collectionMap\n})\n\nexport const FetchCollectionsFailed = errorMessage => ({\n    type : FETCH_COLLECTIONS_FAILED,\n    data : errorMessage\n})\n\nexport const FetchCollectionsStartAsync = () => {\n    return dispatch => {\n        const collectionRef = firestore.collection('collections')\n        dispatch(FetchCollectionsStart())\n        collectionRef.get().then(snapShot => {\n            const collectionMap = ConvertCollectionsToMap(snapShot)\n            dispatch(FetchCollectionsStart(collectionMap))\n        })\n        .catch(error => dispatch(FetchCollectionsFailed(error.message)))\n    }\n}"]},"metadata":{},"sourceType":"module"}